<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:lang="http://www.springframework.org/schema/lang"       
       xsi:schemaLocation="
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
       "  >

	<bean id="traceFormatter" class="org.apache.camel.processor.interceptor.DefaultTraceFormatter">
		<property name="showProperties" value="true"/>
		<property name="showHeaders" value="true"/>
		<property name="showRouteId" value="true" />
	</bean>

	
	
	<bean id="FileImportAntFilter" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
	    <!-- include and file in the subfolder that has day in the name -->
	    <property name="includes" value="*trades*.csv,*trades*.txt"/>
	    <!-- exclude all files with bad in name or .xml files. Use comma to seperate multiple excludes -->
	    <property name="excludes" value="**/*bad*"/>
	</bean>
	
	<bean id="IsinImportAntFilter" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
	    <!-- include and file in the subfolder that has day in the name -->
	    <property name="includes" value="isins*.txt"/>
	    <!-- exclude all files with bad in name or .xml files. Use comma to seperate multiple excludes -->
	    <property name="excludes" value="**/*bad*"/>
	</bean>	
		
	
	  
	<bean name="fileImportIdempotentRepository" class="org.tradex.camel.idempotent.JmxNamedJdbcMessageIdRepository">
		<constructor-arg ref="primaryDataSource" />
		<constructor-arg value="TradeFileImportProcessor" />
		<property name="objectName" value="org.tradex:service=FileImportIdempotentRepository" />		
	</bean>
	
	<bean name="IsinImportIdempotentRepository" class="org.tradex.camel.idempotent.JmxNamedJdbcMessageIdRepository">
		<constructor-arg ref="primaryDataSource" />
		<constructor-arg value="IsinFileImportProcessor" />
		<property name="objectName" value="org.tradex:service=IsinImportIdempotentRepository" />		
	</bean>
	
	
	<bean id="TradexCSVFormat" class="org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat">
		<constructor-arg value="org.tradex.domain.trade" />
	</bean>
	
	<bean id="IsinCSVFormat" class="org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat">
		<constructor-arg value="org.tradex.domain.isin" />
	</bean>
	
	<bean id="TradeValidator" class="org.tradex.validation.trade.TradeImportValidation" />
	
	
	<bean id="requiredTx" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
	</bean>	
	
	<bean id="hibernate" class="org.apacheextras.camel.component.hibernate.HibernateComponent">
    	<property name="sessionFactory" ref="sessionFactory"/>
  	</bean>	
  	
  	<bean id="tradeEnricher" class="org.tradex.camel.enrich.TradeCommonCodeEnricher" />
	
	 <bean id="aggregatorStrategy" class="org.tradex.camel.aggregator.TradeImportAggregator"/>
	

	<camelContext xmlns="http://camel.apache.org/schema/spring" trace="false" id="TradexContext" autoStartup="true"  >
		<!-- 
		<camel:errorHandler id="TradexImportErrorHandler" type="DeadLetterChannel" deadLetterUri="direct:handleTradeError" useOriginalMessage="true"  >			
			<camel:redeliveryPolicy useCollisionAvoidance="true"  maximumRedeliveries="6" maximumRedeliveryDelay="15000" retryAttemptedLogLevel="WARN" retriesExhaustedLogLevel="ERROR" />
		</camel:errorHandler>
		-->
			

		<camel:threadPoolProfile id="FileImportThreadPool" poolSize="5"  maxPoolSize="10" maxQueueSize="1000" >
			<camel:description>Trade Import Thread Pool</camel:description>
		</camel:threadPoolProfile>
		
		<camel:endpoint id="TradexHibernate" uri="hibernate://tradex" />

		<camel:onException id="TradeImportBusinessExceptionHandler" useOriginalMessage="true"  >
			<camel:exception>org.tradex.domain.trade.TradeImportBusinessException</camel:exception>
			<camel:redeliveryPolicy redeliveryDelay="3000" maximumRedeliveries="3" maximumRedeliveryDelay="15000" retryAttemptedLogLevel="WARN" retriesExhaustedLogLevel="ERROR" asyncDelayedRedelivery="true"  />
			<camel:handled><camel:constant>true</camel:constant></camel:handled>
			<camel:to uri="direct:handleTradeError" />					
		</camel:onException>
				
		<camel:route autoStartup="true" id="TradeImport" handleFault="true" >
			<!-- <camel:from id="TradeImportFile" uri="file:c:/temp/tradein?idempotent=true&amp;filter=#FileImportAntFilter&amp;idempotentRepository=#fileImportIdempotentRepository&amp;delay=5000&amp;delete=true" /> -->
			<camel:from id="TradeImportFile" uri="file:/tmp/tradein?idempotent=true&amp;filter=#FileImportAntFilter&amp;idempotentRepository=#fileImportIdempotentRepository&amp;delay=5000&amp;delete=true" />								
			<camel:transacted id="FileImporterTransaction" ref="requiredTx" />
			<unmarshal id="TradeImportUnmarshaller" ref="TradexCSVFormat" />
			<camel:setHeader headerName="CamelTradeCount">
				<camel:simple>${body.size}</camel:simple>				
			</camel:setHeader>
			
			<camel:to id="TradeImportLogger" uri="log:test.org.tradex.BEFORESPLIT?level=INFO&amp;showAll=true&amp;multiline=true" />		    
			<camel:split streaming="true" id="TradeImportSplit">
				<camel:method bean="olu" method="split" id="TradeImportSplitter" />
				<camel:process id="TradeEnricher" ref="tradeEnricher" />								
				<camel:bean id="TradeValidation"  ref="TradeValidator" method="validateTrade"  />
				<camel:to ref="TradexHibernate" />
			</camel:split>
			<camel:onCompletion useOriginalMessage="true" onCompleteOnly="true" >				
				<camel:to uri="direct:handleTradeComplete" />
			</camel:onCompletion>					
		</camel:route>
		
		<route autoStartup="true" id="TradeImportFailureHandler">
			<camel:from id="DirectTradeErrorHandler" uri="direct:handleTradeError" />
			<marshal id="FailedTradeImportMarshaller" ref="TradexCSVFormat" />
			<camel:to id="FailedTradeDLQ" uri="file:c:/temp/tradein/.dlq/?fileExist=Append" />
		</route>
		
		<route autoStartup="true" id="TradeImportCompletionHandler">
			<camel:from id="DirectTradeCompletionHandler" uri="direct:handleTradeComplete" />
			<marshal id="CompleteTradeImportMarshaller" ref="TradexCSVFormat" />
			<camel:to id="TradeDoneDirectory" uri="file:c:/temp/tradein/.done/?fileExist=Append" />
		</route>
		
		
		<route autoStartup="true" id="IsinImport">
			<!-- <camel:from uri="file:c:/temp/isinsin?idempotent=true&amp;filter=#IsinImportAntFilter&amp;idempotentRepository=#IsinImportIdempotentRepository&amp;delay=5000&amp;initialDelay=0&amp;move=.done" /> -->
			<camel:from uri="file:/tmp/isinsin?idempotent=true&amp;filter=#IsinImportAntFilter&amp;idempotentRepository=#IsinImportIdempotentRepository&amp;delay=5000&amp;initialDelay=0&amp;move=.done" />			
			<camel:transacted id="IsiImporterTransaction" ref="requiredTx" />
			<unmarshal id="IsiImportUnmarshaller" ref="IsinCSVFormat" />
		    <camel:to id="IsinImportLogger" uri="log:test.org.tradex.domain?level=INFO&amp;showAll=true&amp;multiline=true" />
			<camel:split streaming="true" id="IsinImportSplit">
				<camel:method bean="olu" method="split" id="IsinImportSplitter" />
				<camel:to ref="TradexHibernate" />
			</camel:split>
			
		</route>
		
	</camelContext>
	
	<bean id="olu" class="org.tradex.camel.split.ObjectListUnwrapper" />		

       
</beans>


<!-- 
================  TRADE AGGREGATOR  ===================
				<camel:to uri="log:test.org.tradex.BEFOREAGGR?level=INFO&amp;showAll=true&amp;multiline=true" />
				<camel:aggregate strategyRef="aggregatorStrategy">
					<camel:correlationExpression><simple>${header.CamelFileName}</simple></camel:correlationExpression>
					<camel:completionSize><simple>${header.CamelTradeCount}</simple></camel:completionSize>
					
					<camel:to uri="log:test.org.tradex.AFTERAGGR?level=INFO&amp;showAll=true&amp;multiline=true" />
					 
					<camel:marshal>					
		           		<camel:jaxb prettyPrint="true" encoding="iso-8859-1" contextPath="org.tradex.domain.trade"/>
		       		</camel:marshal>	        		
		       		<to uri="log:jaxb"/>
		       					
				</camel:aggregate>														


 -->